name: CI

on:
  workflow_run:
    workflows: [ci_cmake]
    types:
      - completed


jobs:
  arm:
    name: Linux ARM
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=arm-linux-gnueabihf \
          PACKAGES="g++-arm-linux-gnueabihf" \
          DEP_OPTS="NO_QT=1" \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-reduce-exports" \
          bash -xe ./build-test.sh

  win64:
    name: WIN64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-w64-mingw32 \
          DEP_OPTS="NO_QT=1" \
          PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64" \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-reduce-exports" \
          bash -xe ./build-test.sh

  linux_x86_no_gui_debug:
    name: x86 Linux, No GUI, Debug
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build debug
        run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq libevent-dev bsdmainutils libboost-test-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev systemtap-sdt-dev bpfcc-tools bpftrace" \
          NO_DEPENDS=1 \
          RUN_TESTS=false \
          RUN_BENCH=true \
          DEBUD_MODE=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-reduce-exports --with-gui=no --enable-debug CPPFLAGS=-DDEBUG CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  linux_x86_no_gui_release:
    name: x86 Linux, No GUI, Release, USDT
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build release
        run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq libevent-dev bsdmainutils libboost-test-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev systemtap-sdt-dev bpfcc-tools bpftrace" \
          NO_DEPENDS=1 \
          RUN_TESTS=true \
          RUN_BENCH=true \
          DEBUD_MODE=false \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-reduce-exports --with-gui=no --enable-usdt CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  linux_x86_with_GUI_and_depends_release:
    name: x86_64 Linux, only depends, Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq  bsdmainutils bpfcc-tools bpftrace" \
          DEP_OPTS="V=1" \
          RUN_TESTS=true \
          RUN_BENCH=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-reduce-exports" \
          CXXFLAGS="-g0 -O2" \
          bash -xe ./build-test.sh

  linux-x86_linux_qt5_release:
    name: x86_64 Linux, qt5 dev, depends, Release"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools qttools5-dev" \
          DEP_OPTS="NO_QT=1 V=1" \
          RUN_TESTS=true \
          RUN_BENCH=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-gui=qt5 --enable-reduce-exports" \
          CXXFLAGS="-g0 -O2" \
          bash -xe ./build-test.sh

  linux_x86_with_only_system_lib:
    name: x86_64 Linux, with GUI, system libs"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-test-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev" \
          NO_DEPENDS=1 \
          RUN_TESTS=true \
          RUN_BENCH=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-zmq --with-incompatible-bdb --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER" \
          bash -xe ./build-test.sh

  linux_x86_no_wallet:
    name: x86_64 Linux, No GUI, No wallet
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-unknown-linux-gnu \
          PACKAGES="python3" \
          DEP_OPTS="NO_WALLET=1 NO_QT=1" \
          RUN_TESTS=true \
          RUN_BENCH=true \
          GOAL="install" \
          BITCOIN_CONFIG="--enable-reduce-exports" \
          bash -xe ./build-test.sh

  cross_mac_debug:
    name: Cross Mac Debug
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-apple-darwin \
          PACKAGES="cmake python3-dev python3-setuptools clang lld llvm llvm-dev g++ zip" \
          DEP_OPTS="LOG=1" \
          OSX_SDK=10.15 \
          GOAL="all deploy" \
          DEBUD_MODE=true \
          BITCOIN_CONFIG="--with-gui=qt5 --enable-reduce-exports --enable-werror --enable-debug CPPFLAGS=-DDEBUG --with-qtdbus=no" \
          bash -xe ./build-test.sh

  cross_mac_release:
    name: Cross Mac Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: |
          source ./default-env.sh
          HOST=x86_64-apple-darwin \
          PACKAGES="cmake python3-dev python3-setuptools clang lld llvm llvm-dev g++ zip" \
          DEP_OPTS="LOG=1" \
          OSX_SDK=10.15 \
          GOAL="all deploy" \
          DEBUD_MODE=false \
          BITCOIN_CONFIG="--with-gui=qt5 --enable-reduce-exports --enable-werror --with-qtdbus=no" \
          bash -xe ./build-test.sh

  lint:
    name: "[PARTIAL_PENDING]lint"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: |
          RETRY() { for i in {1..3};do $*&&break;sleep 1;done }
          RETRY apt-get update
          RETRY apt-get install --no-install-recommends --no-upgrade -qq python3 python3-pip git
          RETRY pip3 install flake8
          if [ $GITHUB_EVENT_NAME != "pull_request" ]; then test/lint/commit-script-check.sh $(git rev-parse $GITHUB_BASE_REF)..$(git rev-parse HEAD); fi
          # we changed subtrees for add CMake files. So far it comment outed.
          # test/lint/git-subtree-check.sh src/crypto/ctaes
          # test/lint/git-subtree-check.sh src/secp256k1
          # test/lint/git-subtree-check.sh src/univalue
          # test/lint/git-subtree-check.sh src/leveldb
          test/lint/check-doc.py
          test/lint/check-rpc-mappings.py .
          test/lint/lint-all.sh
          echo "PENDING some lint files! pending lint file name has 'pending-' prefix."
          ls test/lint/ | grep ^pending-
